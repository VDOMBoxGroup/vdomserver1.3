<?xml version="1.0" encoding="utf-8"?>
<Type>
  <Information>
    <Name>xmldialog</Name>
    <DisplayName>#Lang(001)</DisplayName>
    <Description>#Lang(002)</Description>
    <ClassName>VDOM_xmldialog</ClassName>
    <ID>887e2a68-4cb0-e28a-6d7b-4dd41c35ca6a</ID>
    <Icon>#Res(723723b4-c8f4-5e4a-b02c-16fa8e0d53f7)</Icon>
    <EditorIcon>#Res(37abe2ec-e61a-8981-e929-16faba369563)</EditorIcon>
    <StructureIcon>#Res(9f1c05cd-fee2-6055-2ef4-16fae6375ed7)</StructureIcon>
    <Moveable>1</Moveable>
    <Resizable>3</Resizable>
    <Container>1</Container>
    <Category>Additional</Category>
    <Dynamic>1</Dynamic>
    <Version>1.70.6720</Version>
    <InterfaceType>1</InterfaceType>
    <OptimizationPriority>1</OptimizationPriority>
    <Containers>htmlcontainer, container</Containers>
    <Languages>en_US</Languages>
    <Handlers>set_attr</Handlers>
    <RemoteMethods/>
    <WCAG/>
    <XMLScriptName/>
  </Information>
  <Attributes>
    <Attribute>
      <Name>hierarchy</Name>
      <DisplayName>#Lang(101)</DisplayName>
      <DefaultValue>0</DefaultValue>
      <Visible>1</Visible>
      <Help>#Lang(201)</Help>
      <InterfaceType>0</InterfaceType>
      <CodeInterface>TextField(2)</CodeInterface>
      <Colorgroup>1</Colorgroup>
      <ErrorValidationMessage>#Lang(301)</ErrorValidationMessage>
      <RegularExpressionValidation>^\d+$</RegularExpressionValidation>
    </Attribute>
    <Attribute>
      <Name>top</Name>
      <DisplayName>#Lang(102)</DisplayName>
      <DefaultValue>0</DefaultValue>
      <Visible>1</Visible>
      <Help>#Lang(202)</Help>
      <InterfaceType>0</InterfaceType>
      <CodeInterface>TextField(4)</CodeInterface>
      <Colorgroup>1</Colorgroup>
      <ErrorValidationMessage>#Lang(302)</ErrorValidationMessage>
      <RegularExpressionValidation>^\d{1,4}$</RegularExpressionValidation>
    </Attribute>
    <Attribute>
      <Name>left</Name>
      <DisplayName>#Lang(103)</DisplayName>
      <DefaultValue>0</DefaultValue>
      <Visible>1</Visible>
      <Help>#Lang(203)</Help>
      <InterfaceType>0</InterfaceType>
      <CodeInterface>TextField(4)</CodeInterface>
      <Colorgroup>1</Colorgroup>
      <ErrorValidationMessage>#Lang(303)</ErrorValidationMessage>
      <RegularExpressionValidation>^\d{1,4}$</RegularExpressionValidation>
    </Attribute>
    <Attribute>
      <Name>width</Name>
      <DisplayName>#Lang(104)</DisplayName>
      <DefaultValue>400</DefaultValue>
      <Visible>1</Visible>
      <Help>#Lang(204)</Help>
      <InterfaceType>0</InterfaceType>
      <CodeInterface>TextField(4)</CodeInterface>
      <Colorgroup>1</Colorgroup>
      <ErrorValidationMessage>#Lang(304)</ErrorValidationMessage>
      <RegularExpressionValidation>^\d{1,4}$</RegularExpressionValidation>
    </Attribute>
    <Attribute>
      <Name>height</Name>
      <DisplayName>#Lang(105)</DisplayName>
      <DefaultValue>300</DefaultValue>
      <Visible>1</Visible>
      <Help>#Lang(205)</Help>
      <InterfaceType>0</InterfaceType>
      <CodeInterface>TextField(4)</CodeInterface>
      <Colorgroup>1</Colorgroup>
      <ErrorValidationMessage>#Lang(305)</ErrorValidationMessage>
      <RegularExpressionValidation>^\d{1,4}$</RegularExpressionValidation>
    </Attribute>
    <Attribute>
      <Name>title</Name>
      <DisplayName>#Lang(106)</DisplayName>
      <DefaultValue/>
      <Visible>1</Visible>
      <Help>#Lang(206)</Help>
      <InterfaceType>0</InterfaceType>
      <CodeInterface>TextField(1000)</CodeInterface>
      <Colorgroup>2</Colorgroup>
      <ErrorValidationMessage>#Lang(306)</ErrorValidationMessage>
      <RegularExpressionValidation>.*</RegularExpressionValidation>
    </Attribute>
    <Attribute>
      <Name>xmldata</Name>
      <DisplayName>#Lang(107)</DisplayName>
      <DefaultValue/>
      <Visible>1</Visible>
      <Help>#Lang(207)</Help>
      <InterfaceType>0</InterfaceType>
      <CodeInterface>MultiLine(50000)</CodeInterface>
      <Colorgroup>2</Colorgroup>
      <ErrorValidationMessage>#Lang(307)</ErrorValidationMessage>
      <RegularExpressionValidation>.*</RegularExpressionValidation>
    </Attribute>
    <Attribute>
      <Name>show</Name>
      <DisplayName>#Lang(108)</DisplayName>
      <DefaultValue>0</DefaultValue>
      <Visible>1</Visible>
      <Help>#Lang(208)</Help>
      <InterfaceType>0</InterfaceType>
      <CodeInterface>DropDown((#Lang(401)|1)|(#Lang(402)|0))</CodeInterface>
      <Colorgroup>2</Colorgroup>
      <ErrorValidationMessage>#Lang(308)</ErrorValidationMessage>
      <RegularExpressionValidation>[01]</RegularExpressionValidation>
    </Attribute>
    <Attribute>
      <Name>modal</Name>
      <DisplayName>#Lang(109)</DisplayName>
      <DefaultValue>1</DefaultValue>
      <Visible>1</Visible>
      <Help>#Lang(209)</Help>
      <InterfaceType>0</InterfaceType>
      <CodeInterface>DropDown((#Lang(403)|1)|(#Lang(404)|0))</CodeInterface>
      <Colorgroup>2</Colorgroup>
      <ErrorValidationMessage>#Lang(309)</ErrorValidationMessage>
      <RegularExpressionValidation>[01]</RegularExpressionValidation>
    </Attribute>
  </Attributes>
  <Languages>
    <Language Code="en_US">
      <Sentence ID="001">XML dialog</Sentence>
      <Sentence ID="002">The XML dialog type produces an object displayed as a dialog window. The content of the dialog is described in the 'XML data' attribute ib XML format.</Sentence>
      <Sentence ID="003"></Sentence>
      <Sentence ID="101">Herarchy</Sentence>
      <Sentence ID="102">Top</Sentence>
      <Sentence ID="103">Left</Sentence>
      <Sentence ID="104">Width</Sentence>
      <Sentence ID="105">Height</Sentence>
      <Sentence ID="106">Title</Sentence>
      <Sentence ID="107">XML data</Sentence>
      <Sentence ID="108">Show</Sentence>
      <Sentence ID="109">Modal</Sentence>
      <Sentence ID="201">Hierarchy of the object</Sentence>
      <Sentence ID="202">Distance from the top edge of the parent in pixels</Sentence>
      <Sentence ID="203">Distance from the left edge of the parent in pixels</Sentence>
      <Sentence ID="204">Width in pixels</Sentence>
      <Sentence ID="205">Height in pixels</Sentence>
      <Sentence ID="206">Title of the object to display, HTML allowed</Sentence>
      <Sentence ID="207">XML data</Sentence>
      <Sentence ID="208">Show dialog after page load</Sentence>
      <Sentence ID="209">Open dialog in modal window</Sentence>
      <Sentence ID="301">Incorrect value, must be positive integer</Sentence>
      <Sentence ID="302">Incorrect value, must be positive integer</Sentence>
      <Sentence ID="303">Incorrect value, must be positive integer</Sentence>
      <Sentence ID="304">Incorrect value, must be positive integer</Sentence>
      <Sentence ID="305">Incorrect value, must be positive integer</Sentence>
      <Sentence ID="306">Incorrect value</Sentence>
      <Sentence ID="307">Incorrect value</Sentence>
      <Sentence ID="308">Incorrect value</Sentence>
      <Sentence ID="309">Incorrect value</Sentence>
      <Sentence ID="401">Yes</Sentence>
      <Sentence ID="402">No</Sentence>
      <Sentence ID="403">Yes</Sentence>
      <Sentence ID="404">No</Sentence>
      <Sentence ID="501"></Sentence>
      <Sentence ID="502"></Sentence>
      <Sentence ID="503"></Sentence>
      <Sentence ID="504"></Sentence>
      <Sentence ID="505"></Sentence>
      <Sentence ID="506"></Sentence>
      <Sentence ID="507"></Sentence>
      <Sentence ID="601"></Sentence>
      <Sentence ID="602"></Sentence>
      <Sentence ID="603"></Sentence>
      <Sentence ID="604"></Sentence>
      <Sentence ID="701"></Sentence>
      <Sentence ID="702"></Sentence>
      <Sentence ID="703"></Sentence>
      <Sentence ID="704"></Sentence>
      <Sentence ID="705"></Sentence>
      <Sentence ID="801"></Sentence>
      <Sentence ID="802"></Sentence>
      <Sentence ID="803"></Sentence>
      <Sentence ID="804"></Sentence>
      <Sentence ID="805"></Sentence>
      <Sentence ID="901"></Sentence>
    </Language>
  </Languages>
  <Resources>
    <Resource ID="723723b4-c8f4-5e4a-b02c-16fa8e0d53f7" Name="Icon" Type="png"><![CDATA[iVBORw0KGgoAAAANSUhEUgAAADIAAAAyCAYAAAAeP4ixAAAAGXRFWHRTb2Z0d2FyZQBBZG9iZSBJ
bWFnZVJlYWR5ccllPAAAAyJpVFh0WE1MOmNvbS5hZG9iZS54bXAAAAAAADw/eHBhY2tldCBiZWdp
bj0i77u/IiBpZD0iVzVNME1wQ2VoaUh6cmVTek5UY3prYzlkIj8+IDx4OnhtcG1ldGEgeG1sbnM6
eD0iYWRvYmU6bnM6bWV0YS8iIHg6eG1wdGs9IkFkb2JlIFhNUCBDb3JlIDUuMy1jMDExIDY2LjE0
NTY2MSwgMjAxMi8wMi8wNi0xNDo1NjoyNyAgICAgICAgIj4gPHJkZjpSREYgeG1sbnM6cmRmPSJo
dHRwOi8vd3d3LnczLm9yZy8xOTk5LzAyLzIyLXJkZi1zeW50YXgtbnMjIj4gPHJkZjpEZXNjcmlw
dGlvbiByZGY6YWJvdXQ9IiIgeG1sbnM6eG1wPSJodHRwOi8vbnMuYWRvYmUuY29tL3hhcC8xLjAv
IiB4bWxuczp4bXBNTT0iaHR0cDovL25zLmFkb2JlLmNvbS94YXAvMS4wL21tLyIgeG1sbnM6c3RS
ZWY9Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC9zVHlwZS9SZXNvdXJjZVJlZiMiIHhtcDpD
cmVhdG9yVG9vbD0iQWRvYmUgUGhvdG9zaG9wIENTNiAoV2luZG93cykiIHhtcE1NOkluc3RhbmNl
SUQ9InhtcC5paWQ6MDg4OURDOEQwNjI5MTFFMkFGRTc5NzQxNzY5NDk4RjIiIHhtcE1NOkRvY3Vt
ZW50SUQ9InhtcC5kaWQ6MDg4OURDOEUwNjI5MTFFMkFGRTc5NzQxNzY5NDk4RjIiPiA8eG1wTU06
RGVyaXZlZEZyb20gc3RSZWY6aW5zdGFuY2VJRD0ieG1wLmlpZDowODg5REM4QjA2MjkxMUUyQUZF
Nzk3NDE3Njk0OThGMiIgc3RSZWY6ZG9jdW1lbnRJRD0ieG1wLmRpZDowODg5REM4QzA2MjkxMUUy
QUZFNzk3NDE3Njk0OThGMiIvPiA8L3JkZjpEZXNjcmlwdGlvbj4gPC9yZGY6UkRGPiA8L3g6eG1w
bWV0YT4gPD94cGFja2V0IGVuZD0iciI/PuGucnAAAAUWSURBVHja1FldSFtXHP/FZtb4May2XU2n
smqn4MA5mKgtexjVrMUvXGnKvroXHwp7qjrtg0++TMRCHwbrg3sRIVMZ7RzOTDpEiMwwiXbi0PoS
mpm1NHGiRpOo2f9cb9IYb25urs57/cPhnHPPuSfnl//H73/u0QQCARwHMRgMOqraqHxKJZvKMyp9
VL4xm80bmuMAhEAkUzVaQWI0GpGVlQWn04n+/n5YLJYJGqvURns5GsDw58H23rkBwfdDc/nxYFVd
+0FMIAk41VZeXl7R3NwcepadnY2mpia2bsXExMTXCUqCiMMaPmGaEBL++efaSkNp6qjZuqoUiJ8e
jvH9/esE3zHeuAm9Xi+4L2ZmJG8y0zontlkpICKfHUYd3s7MzOR8gplTpLDnJH8z00pVMwgm5OMw
mUyCGmEOT9KboHYQrK6trYXL5UJ3dzccDge2t7e5mvX5qNWpuVL1/ru/jkza1AoiWHu9XgwNDbGN
w+12Y2vL7wA03wd5RBtt41arFQMDA4pzCNNGUVEREhMT0dDQwBW2v8++qKmh4engPG206MRAdHV1
QUnC1Gg0aGlp4YAIR8pXohXjD7/fj42NDcWA6HQ6UXMUBCJk/8ypfD6fYkCYOQn5pBAQ0ailFokF
IgREnLHVAyYu04qclJSUpCgAZl6xQISACE0qKytDe3u74pooKSk5mLPX19ejrq7uSMhOzphkZz8q
xpY7JolHWD01NYXBwUHFTau6uhqFhYXSCTFyIgOhFmYvKCiQqhFh1amF2aX4iGj4Zcze0dHBtVtb
W9HZ2SnY/r+ZXYqPJEidqCZ2j1sjkf94tPZRg4graqmJ2Q+kkdLSUlUwe3FxsXSNCE2soQMYi+FK
kV08ZLgn+1UTY8sBkxD+8ey4gRj+7gdY7KlILvxQnkaUBhE9agUgC0TayopSuQvTBvcJa+WXHvGo
JeUfdT94EP7RVlHRHsScvOzDhJqAyPWJTa83KpATaWnIuXsXO5R02ilfS6GT3vnGRqzQ8eBlfz/y
+FzN2deHVYsFGXSQO11VhZ3NTSzeuYNcnsPsfK53YI2IjW3Qj0bVCI0tPXqE3Fu38DpxUgYdnX3L
y3jW2/sqKaU5Jy9exIvHj5GUlxdyV7buDr8u9xsH1UgsgB6W4ouYlmdkBDo6S5y7epXrP+3pwerz
59Cmp+9idbmQkp/PrZOk18PrduMEpe6sHwTikXiM4DUCWWF0PQYQJi9mZnCWtLFJm7QPDXHPXuPz
N9fcHHIqK3HWaISWACzPz+MUAV8PA7IeDxC5XOCRACTv+nX42T+ekYELt29j9t49JCYnc2MvFxaQ
dfkycgwGuAgE01Y6AWHrBuRoZM91Vxz+EgvIe21t0GVm4vf79/EGOfsF2rDDaoXLxlEAfFtb+Ndu
xxk6kzufPEFiSgq3nmzTksvKHhFnzya/ePvaNSyOjWGOIhMrZ4aH8Q45/8jk5C4QdmEzPb0LZHYW
5ynjZquxdXeozsjJwc3x8dCaNpMJNtKoIEeyi56HP/5m8/n8cTv9IIVLdREi5IVfMR5RFSHGMjWf
6phdZhbrvnQlyl17RH9vNzxL3X8+39cIu6MPkz//mBrXBLQrhxJ+P2r8UvCiXzT1DuzdnNRL10jg
Pz/969ul9ZT5qD4ST+QqzMs9tHNFLBCR7bdOBxaW1jFzKOFXKRBBuZS7xtWjZisHZK3h48qvqM7H
8ZFFtu9IZ/+HipmK5RgBWeP3HZL/BBgAs5x/nssBafMAAAAASUVORK5CYII=]]></Resource>
    <Resource ID="37abe2ec-e61a-8981-e929-16faba369563" Name="Icon" Type="png"><![CDATA[iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAACwklEQVR42m1TS08TURQ+Z2b6oIXW
2gemhaamCzbs0KT9AYaNCXFpYmKMK124YGGMMZiACwxuXJjGxC0LF7Bwr24IaxIoIUQFpOXVlpnp
Y/qYufd67gBViDe5c6e953zn+75zBhlzAFEBRVHg6hKCA+eCTgGapsHS0hKk02lYWVn5Mj4+fmd6
evoZMsYeU2zoKoBMOtvcPWUyYxyOj48CuVz+eT6fDxUKBR273a5F6AO2bUOn03GTOeeXqsvfkoFc
rVYLtre3IRgMWgsLC5+w1+vuUkxybW0NfD7ff2SI/omI0G63WSwW8+3u/poPBAZfkgRnv93ujKyv
r8PY2Bg4juMGyn0VSBbY3Ny0E4mEBiheJeLD82hZVonopegC6vU6qKrqUj6TIS4xIL/A6/U62WxW
q9UqM5FIdI4AWiXqQqpYLPYTPB5PH+hiyXfJigo6yWRSqzfMmej12By221bJtp0UtQb8fj9IMzOZ
DBDNv3LOAfwDA1Dc2HBC4bAmuPP6WiT6BpvNRgkAU1tbW/0Edi7BpX6ppW5H7PToqEc3Tl9Eo/G3
2GjUXQCZ6JBGQRvP9bNe78wL+b8EpgKKqjoMQDNN/cPQUPgjmqbhAnAK4jRM3DCgt7gIgpI98Thd
IajkvtNsghoMArcsYKbZ9wYNQ+8DCDKue3ICe7OzYNdqkJichGguB82dHYhOTADrdqG6uirKy8vo
DYddTajrp/vE1gWgcYPWwQGsPn0CPcOE7NQUhG5moFOpQvz2LWjs7QGSjN/fvoP+8wcqZLoEKMtJ
lD1WCMAol+Hzw0fgUDWV2imrahTI5JiTRE8gACgLVSq2rRsWHh6V9zmDEU4POTM90l4uH7pDI6SB
5AGXtiExpm+DywsA9aRafT8cj7/D+w/u3lNQuUHJitSkKIiRwYDbe/HvOIuLB8pPzBvweb+GIsMb
fwCDLsCecWjaaQAAAABJRU5ErkJggg==]]></Resource>
    <Resource ID="9f1c05cd-fee2-6055-2ef4-16fae6375ed7" Name="Icon" Type="jpg"><![CDATA[iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAACwklEQVR42m1TS08TURQ+Z2b6oIXW
2gemhaamCzbs0KT9AYaNCXFpYmKMK124YGGMMZiACwxuXJjGxC0LF7Bwr24IaxIoIUQFpOXVlpnp
Y/qYufd67gBViDe5c6e953zn+75zBhlzAFEBRVHg6hKCA+eCTgGapsHS0hKk02lYWVn5Mj4+fmd6
evoZMsYeU2zoKoBMOtvcPWUyYxyOj48CuVz+eT6fDxUKBR273a5F6AO2bUOn03GTOeeXqsvfkoFc
rVYLtre3IRgMWgsLC5+w1+vuUkxybW0NfD7ff2SI/omI0G63WSwW8+3u/poPBAZfkgRnv93ujKyv
r8PY2Bg4juMGyn0VSBbY3Ny0E4mEBiheJeLD82hZVonopegC6vU6qKrqUj6TIS4xIL/A6/U62WxW
q9UqM5FIdI4AWiXqQqpYLPYTPB5PH+hiyXfJigo6yWRSqzfMmej12By221bJtp0UtQb8fj9IMzOZ
DBDNv3LOAfwDA1Dc2HBC4bAmuPP6WiT6BpvNRgkAU1tbW/0Edi7BpX6ppW5H7PToqEc3Tl9Eo/G3
2GjUXQCZ6JBGQRvP9bNe78wL+b8EpgKKqjoMQDNN/cPQUPgjmqbhAnAK4jRM3DCgt7gIgpI98Thd
IajkvtNsghoMArcsYKbZ9wYNQ+8DCDKue3ICe7OzYNdqkJichGguB82dHYhOTADrdqG6uirKy8vo
DYddTajrp/vE1gWgcYPWwQGsPn0CPcOE7NQUhG5moFOpQvz2LWjs7QGSjN/fvoP+8wcqZLoEKMtJ
lD1WCMAol+Hzw0fgUDWV2imrahTI5JiTRE8gACgLVSq2rRsWHh6V9zmDEU4POTM90l4uH7pDI6SB
5AGXtiExpm+DywsA9aRafT8cj7/D+w/u3lNQuUHJitSkKIiRwYDbe/HvOIuLB8pPzBvweb+GIsMb
fwCDLsCecWjaaQAAAABJRU5ErkJggg==]]></Resource>
  </Resources>
  <SourceCode><![CDATA[

from xml.dom.minidom import parse, parseString
import base64

def on_compile(application, object, action_name, context, objects):
	result=objects
	for xobject in object.get_objects_list():
		result.append({"object": xobject})
	return result

class VDOM_xmldialog(VDOM_object):

	def get_prop(self, e):
		res = {}
		for p in e.getElementsByTagName("Properties")[0].childNodes:
			if p.nodeType == p.ELEMENT_NODE:
				if p.childNodes:
					res[p.getAttribute("name")] = p.childNodes[0].nodeValue.strip()
		return res

	def get_options(self, e):
		res = {}
		if e.getElementsByTagName("option"):
			for p in e.getElementsByTagName("option"):
				if p.childNodes:
					res[p.getAttribute("id")] = p.childNodes[0].nodeValue.strip()
		return res

	def the_prop(self, arr, x):
		return arr[x] if x in arr else ''

	def the_item(self, css_class, lbl, html, e):
		attr_required = e.getAttribute("required")
		visible = "" if int("0%s" % e.getAttribute("visible").strip()) == 1 else "style='display:none'"
		fw = u"fullsize" if int("0%s" % e.getAttribute("fullsize").strip()) == 1 else ""
		classes = u"%s" % e.getAttribute("class").strip()
		return u"<div class='row %s %s' %s><label class='title'>%s</label><div class='item %s'>%s</div><br style='clear:both' /></div>" % (fw, classes, visible, lbl, css_class, html)

	def render(self, parent, contents=""):

		idn = (self.id).replace('-', '_')
		id = u'o_' + idn

		show = "false" if self.show == "0" else "true"
		modal = "false" if self.modal == "0" else "true"
		data = u""
		data_out = u""
		dialog_title = self.title

		xd = (self.xmldata).encode('utf8').replace('<!--[CDATA[', '<![CDATA[')
		xd = xd.replace(']]-->', ']'+']>')

		try:
			#dom = parseString(u"%s" % (self.xmldata).encode('utf8'))
			dom = parseString(xd)
			props = dom.getElementsByTagName('Properties')[0]
			comps = dom.getElementsByTagName('Components')[0]
			nobtn = True
			for e in comps.childNodes:
				if e.nodeType == e.ELEMENT_NODE:
					#print "tagName  : %s" % e.localName

					attr_id = e.getAttribute("id").replace('"', '&quot;')
					disa = u"disabled='disabled'" if int("0%s" % e.getAttribute("disabled").strip()) == 1 else u""
					ro = u"readonly='readonly'" if int("0%s" % e.getAttribute("readonly").strip()) == 1 else u""

					if e.localName == 'Heading':
						res = self.get_prop(e)
						data += u"<h3>%s</h3>" % self.the_prop(res, 'text');

					elif e.localName == 'TextBox':
						res = self.get_prop(e)
						htm = u"<input type='text' name=\"%s\" value=\"%s\" %s %s />" % ( attr_id, (self.the_prop(res, 'defaultValue')).replace('"', '&quot;'), disa, ro );
						data += self.the_item('textbox', self.the_prop(res, 'label'), htm, e)

					elif e.localName == 'Password':
						res = self.get_prop(e)
						htm = u"<input type='password' name=\"%s\" value=\"%s\" %s %s />" % ( attr_id, (self.the_prop(res, 'defaultValue')).replace('"', '&quot;'), disa, ro );
						data += self.the_item('password', self.the_prop(res, 'label'), htm, e)

					elif e.localName == 'DropDown':
						res = self.get_prop(e)
						#htm = u"<select name=\"%s\"></select>" % ( attr_id );
						#data += self.the_item('dropdown', self.the_prop(res, 'label'), htm, e)
						htm = u""
						sa = self.the_prop(res, 'selected').split(',')
						sa = [ s.strip() for s in sa ]
						da = self.the_prop(res, 'disabled').split(',')
						da = [ s.strip() for s in da ]
						for ik, iv in self.get_options(e).items():
							sel = 'selected="selected"' if ik in sa else ''
							dis = 'disabled="disabled"' if ik in da else ''
							htm += u"<option value=\"%s\" %s %s />%s</option>" % ( ik.replace('"', '&quot;'), sel, dis, iv );
						lmult = int("0%s" % self.the_prop(res, 'multiple'))
						lsize = int("0%s" % self.the_prop(res, 'rows'))
						lines = (u"size='%s'" % lsize) if lsize > 0 else ""
						multi = ""
						if len(sa) > 1 or lmult == 1:
							multi = "multiple='multiple'"
						htm = u"<select name=\"%s\" %s %s %s>%s</select>" % ( attr_id, lines, multi, disa, htm );
						data += self.the_item('dropdown', self.the_prop(res, 'label'), htm, e)

					elif e.localName == 'RadioButton':
						res = self.get_prop(e)
						#p = e.getAttribute("selected").strip().lower()
						#sel = 'checked="checked"' if p == 'true' or p == '1' else ''
						#htm = u"<input autocomplete='off' type='radio' name=\"%s\" />" % ( attr_id );
						htm = u"";
						sa = self.the_prop(res, 'selected').strip()
						for ik, iv in self.get_options(e).items():
							sel = 'checked="checked"' if ik == sa else ''
							#htm += u"<label><input autocomplete='off' type='radio' name=\"%s[%s]\" %s />&nbsp;%s</label>" % ( e.getAttribute("id"), ik, sel, iv );
							htm += u"<label><input autocomplete='off' type='radio' name=\"%s\" %s %s />&nbsp;%s</label>" % ( e.getAttribute("id"), sel, disa, iv );
						data += self.the_item('radio', self.the_prop(res, 'label'), htm, e)

					elif e.localName == 'CheckBox':
						res = self.get_prop(e)
						#p = e.getAttribute("selected").strip().lower()
						#sel = 'checked="checked"' if p == 'true' or p == '1' else ''
						#htm = u"<input type='checkbox' name=\"%s\" %s />" % ( attr_id, sel );
						#data += self.the_item('checkbox', self.the_prop(res, 'label'), htm, e)
						htm = u"";
						sa = self.the_prop(res, 'selected').split(',')
						sa = [ s.strip() for s in sa ]
						for ik, iv in self.get_options(e).items():
							sel = 'checked="checked"' if ik in sa else ''
							htm += u"<label><input autocomplete='off' type='checkbox' name=\"%s[%s]\" %s %s />&nbsp;%s</label>" % ( e.getAttribute("id"), ik, sel, disa, iv );
						data += self.the_item('checkbox', self.the_prop(res, 'label'), htm, e)

					elif e.localName == 'Upload':
						res = self.get_prop(e)
						htm = u"<input type='file' name=\"%s\" %s />" % ( attr_id, disa );
						data += self.the_item('upload', self.the_prop(res, 'label'), htm, e)

					elif e.localName == 'TextArea':
						res = self.get_prop(e)
						w = int("0%s" % self.the_prop(res, 'width'));
						h = int("0%s" % self.the_prop(res, 'height'));
						style = ''
						if w > 0 or h > 0:
							style = u"style='%s%s'" % (
									"width:%spx;" % w if w > 0 else "",
									"height:%spx;" % h if h > 0 else ""
								)
						htm = u"<textarea name=\"%s\" %s %s>%s</textarea>" % ( attr_id, disa, style, self.the_prop(res, 'defaultValue') );
						data += self.the_item('textarea', self.the_prop(res, 'label'), htm, e)

					elif e.localName == 'Hypertext':
						res = self.get_prop(e)
						htm = u"%s" % self.the_prop(res, 'value');
						data += self.the_item('hypertext', self.the_prop(res, 'label'), htm, e)

					elif e.localName == 'Button':
						nobtn = False
						res = self.get_prop(e)
						label = self.the_prop(res, 'label');
						required = e.getAttribute("required")
						visible = "" if int("0%s" % e.getAttribute("visible").strip()) == 1 else "style='display:none'"
						align = self.the_prop(res, 'buttonAlign').strip().replace("'",'&acute;')
						img = self.the_prop(res, 'buttonImage').strip().replace("'",'&acute;')
						btn = u"<input type='submit' value='%s' %s />" % ( label, disa ) if img == '' else u"<input type='image' alt='%s' title='%s' src='%s' %s />" % (label, label, img, disa)
						data += u"<div class='row' %s><div class='submit' style='text-align:%s'>%s</div></div>" % (visible, align, btn)

			#data_out = u"<form action='' method='post' enctype='multipart/form-data' class='xml-dialog-form'>%s<div class='submit'><input type='submit' /></div></form>" % data;
			if nobtn:
				data += u"<div class='submit'><input type='submit' /></div>"
			data_out = u"<form action='' method='post' enctype='multipart/form-data' class='xml-dialog-form'>%s</form>" % data;

			for e in props.childNodes:
				if e.nodeType == e.ELEMENT_NODE and e.localName == 'Property':
					if e.getAttribute("name") == 'label':
						temp_title = e.childNodes[0].nodeValue.strip()
						if temp_title != "":
							dialog_title = temp_title

		except Exception as e:
			debug("[XMLDialog] Error: XML data is not valid")
			debug(e)

		if VDOM_CONFIG_1["DEBUG"] == "1":
			debug_info = u"objtype='xmldialog' objname='%s' ver='%s'" % (self.name, self.type.version)
		else:
			debug_info = u""

		result = """
<style>
.xml-dialog-form div.row {
text-align: left;
clear: both;
float: none;
}
.xml-dialog-form div.row label {
float: left;
width: 45%%;
}
.xml-dialog-form div.row div.item {
float: right;
width: 50%%;
}
.xml-dialog-form div.fullsize label,
.xml-dialog-form div.fullsize div.item {
float: none;
width: 100%%;
}
.xml-dialog-form div.row div.item label {
float: none;
width: auto;
}
.xml-dialog-form div.row div.textbox input,
.xml-dialog-form div.row div.item select,
.xml-dialog-form div.row div.item textarea {
width: 99%%;
resize: none;
}
.xml-dialog-form div.row div.item br {
width: 100%%;
display: block;
clear: both;
overflow: hidden;
height: 1px;
}
.xml-dialog-form div.submit {
text-align: center;
margin-top: 10px;
}
	.xml-dialog-form div.submit img {
	border: none;
	cursor: pointer;
	}
</style>
<div style='display:none' %(debug_info)s><div id='%(id)s'>%(data)s</div></div>
<script type='text/javascript'>$q(function(){
	$q("#%(id)s").data('ev','1');
	$q("#%(id)s:ui-dialog").dialog("destroy");
	$q("#%(id)s").dialog({
		title: "%(title)s",
		width: %(width)s,
		height: %(height)s,
		modal: %(modal)s,
		draggable: !%(modal)s,
		resizable: false,
		autoOpen: %(show)s,
		open: function(e,u) {
			if ($q("#%(id)s").data('ev')=='1') execEventBinded('%(idn)s', "show", {});

			$j.datepicker.setDefaults($j.datepicker.regional['fr']);
			$j('#%(id)s input.date, #%(id)s .date input').datepicker('destroy').datepicker({
				dateFormat: 'dd/mm/yy', showButtonPanel: true
			}).blur();
		},
		close: function(e,u) {
			$j('#ui-datepicker-div,#ColorDropdown_selector').fadeOut();
			if ($q("#%(id)s").data('ev')=='1') execEventBinded('%(idn)s', "hide", {});
		}
	});
	$q("#%(id)s form.xml-dialog-form").live('submit',function(e){
		e.preventDefault;
		var x=[], a=$q(this).serializeArray();
		for (k in a) if(typeof a[k].name !== 'undefined' && typeof a[k].value !== 'undefined') x[a[k].name]=a[k].value;
		execEventBinded('%(idn)s', "submit", x);
		return false;
	});
});</script>""" % {
			"data":   data_out,
			"id":     id,
			"idn":    idn,
			"width":  self.width,
			"height": self.height,
			"title":  dialog_title.replace('"','&quot;'),
			"show":   show,
			"modal":  modal,
			"debug_info": debug_info }

		return VDOM_object.render(self, parent, contents=result)

	def wysiwyg(self, parent, contents=""):

		xd = (self.xmldata).encode('utf8').replace('<!--[CDATA[', '<![CDATA[').replace(']]-->', ']'+']>').strip()
		xmldata = u''
		if xd <> "":
			try:
				dom = parseString(xd)
				props = dom.getElementsByTagName('Properties')[0]
				comps = dom.getElementsByTagName('Components')[0]
				for e in comps.childNodes:
					if e.nodeType == e.ELEMENT_NODE:
						xmldata += u"%s [%s]<br />" % (e.localName, e.getAttribute("id").replace('"', '&quot;'))
			except Exception as e:
				xmldata = u"<p style='color:red'>Error: XML data is not valid</p>"
				debug("[XMLDialog] Error: XML data is not valid")
				debug(e)

		result= "<container id=\"%s\" hierarchy=\"%s\" order=\"%s\" top=\"%s\" left=\"%s\" width=\"%s\" height=\"%s\">"\
					"<svg>"\
						"<rect x=\"%s\" y=\"%s\" width=\"%s\" height=\"%s\" stroke=\"#cccccc\" stroke-width=\"3\" fill=\"#ffffff\">"\
							"<rect x=\"%s\" y=\"%s\" width=\"%s\" height=\"40\" fill=\"#e9e9e9\"/>"\
						"</rect>"\
					"</svg>"\
					"<text top=\"12\" width=\"%s\" fontsize=\"14\" color=\"black\" textalign=\"center\">%s</text>"\
					"<text textalign='right' fontweight='bold' top='%s' left='%s' color='#aaaaaa'>XML Dialog</text>"\
					"<htmltext top=\"50\" left=\"10\" width=\"%s\" height=\"%s\"><div style=\"font-size:12px\">%s</div></htmltext>"\
				"%s</container>"%(
					self.id, self.hierarchy, self.order, self.top, self.left, int(self.width) + 3, int(self.height) + 3,
					0, 0, self.width, self.height,
					0, 0, self.width,
					self.width, self.title,
					int(self.height) - 24,
					int(self.width) - 140,
					int(self.width) - 20,
					int(self.height) - 60,
					xmldata,
					contents)

		return VDOM_object.wysiwyg(self, parent, contents=result)

def set_attr(app_id, object_id, param):
	if "xmldata" in param:
		o = application.objects.search(object_id)
		#o.attributes.xmldata = base64.b64encode(param["xmldata"]["value"])
		a = (param["xmldata"]["value"]).replace('<![CDATA[', '<!--[CDATA[')
		o.attributes.xmldata = a.replace(']'+']>', ']]-->')
	return ""

		]]></SourceCode>
  <Libraries>
    <Library Target="HTML"><![CDATA[<script type='text/javascript'>
String.prototype.fmt=function(){
	var a = arguments;
	return this.replace(/{(\d+)}/g, function(m, n) {
		return typeof a[n] != 'undefined' ? a[n] : m;
	});
};
function vdom_xd_load(id,xd){
	xd = $q.trim(xd).split('<!--[CDATA[').join('<![CDATA[').split(']]-->').join(']'+']>');
	var p = $q.parseXML(xd),
		x = $q(p), w = $q(id), data = [],
		dodiv = function(cn,lbl,htm,a){
			var vis = parseInt(a.attr('visible') || '0', 10);
			if (vis !== 1) vis = 'style="display:none"'; else vis = '';
			var fw = parseInt(a.attr('fullsize') || '0', 10);
			if (fw === 1) fw = 'fullsize'; else fw = '';
			var classes = a.attr('class') || '';
			return "<div class='row {4} {5}' {0}><label class='title'>{2}</label><div class='item {1}'>{3}</div><br style='clear:both' /></div>".fmt(vis, cn, lbl, htm, fw, classes);
		}
	w.html('');
	var nobtn = true;
	x.find("VDOMFormContainer>Components>*").each(function(){
		var t = $q(this), t0 = this, opts, s, sa, da, dis, sel, ro, disa;

		if (t0.tagName == 'Heading') {
			data.push("<h3>"+t.find('Property[name=text]').text()+"</h3>");
		}
		else if (t0.tagName == 'TextBox') {
			var dis = parseInt(t.attr('disabled') || '0', 10);
			dis = (dis == 1) ? "disabled='disabled'" : "";
			var ro = parseInt(t.attr('readonly') || '0', 10);
			ro = (ro == 1) ? "readonly='readonly'" : "";
			data.push(dodiv('textbox', t.find('Property[name=label]').text(), "<input type='text' name=\""+t.attr('id')+"\" value=\""+t.find('Property[name=defaultValue]').text().replace('"','&quot;')+"\" "+dis+" "+ro+" />", t));
		}
		else if (t0.tagName == 'Password') {
			var dis = parseInt(t.attr('disabled') || '0', 10);
			dis = (dis == 1) ? "disabled='disabled'" : "";
			var ro = parseInt(t.attr('readonly') || '0', 10);
			ro = (ro == 1) ? "readonly='readonly'" : "";
			data.push(dodiv('password', t.find('Property[name=label]').text(), "<input type='password' name=\""+t.attr('id')+"\" value=\""+t.find('Property[name=defaultValue]').text().replace('"','&quot;')+"\" "+dis+" "+ro+" />", t));
		}
		else if (t0.tagName == 'DropDown') {
			var disa = parseInt(t.attr('disabled') || '0', 10);
			disa = (disa == 1) ? "disabled='disabled'" : "";
			var sorting = parseInt(t.attr('sort') || '0', 10);
			//sorting = (sorting == 1) ? true : false;
			var lsize = parseInt(t.find("Property[name=rows]").text(), 10);
			lines = (lsize > 0) ? 'size="'+lsize+'"' : '';
			var mult = parseInt(t.attr('multiple') || '0', 10);
			mult = (mult == 1) ? "multiple='multiple'" : "";
			opts = [], sa = $.map(t.find("Property[name=selected]").text().split(','), $.trim);
			da = $.map(t.find("Property[name=disabled]").text().split(','), $.trim);
			var optid, opti = 0, optarr1 = [], optarr1val = [], optarr2 = {}, optarr3 = {};
			t.find("Property[name=options]>option").each(function(){
				optid = $(this).attr('id').trim();
				sel = ($.inArray(optid, sa) >= 0) ? "selected='selected'" : "";
				dis = ($.inArray(optid, da) >= 0) ? "disabled='disabled'" : "";
				s = $(this).text().trim();
				if (s !== '') {
					optarr1.push(optid);
					optarr1val.push(s);
					optarr2[optid] = s;
					optarr3[optid] = sel + ' ' + dis;
					opti++;
				}
				//if (s !== '') opts.push('<option value="'+optid.replace('"','&quot;')+'" '+dis+' '+sel+'>'+s+'</option>');
			});
			//if (sorting) optarr1.sort();
			if (sorting == 1) {
				optarr1.sort();
			} 
			$j.each(optarr1, function(i){
				opts.push('<option value="'+optarr1[i].replace('"','&quot;')+'" '+optarr3[optarr1[i]]+'>'+optarr2[optarr1[i]]+'</option>');
			});
			var oj = opts.join(' ');
			if (sorting == 2) {
				var x = $j('<select>'+oj+'</select>');
				oj = x.html($j('option', x).sort(function(a, b){
					return a.text == b.text ? 0 : a.text.toLowerCase() < b.text.toLowerCase() ? -1 : 1
				})).html();
			}
			data.push(dodiv('dropdown', t.find('Property[name=label]').text(), "<select name=\""+t.attr('id').replace('"','&quot;')+"\" "+mult+" "+lines+" "+disa+">"+oj+"</select>", t));
		}
		else if (t0.tagName == 'RadioButton') {
			var dis = parseInt(t.attr('disabled') || '0', 10);
			dis = (dis == 1) ? "disabled='disabled'" : "";
			var sorting = parseInt(t.attr('sort') || '0', 10);
			sorting = (sorting == 1) ? true : false;
			opts = [], sel = t.attr('selected') || '';

//			t.find("Property[name=options]>option").each(function(){
//				s = (sel == $(this).attr('id')) ? "checked='checked'" : "";
//				opts.push("<label><input type='radio' name=\""+t.attr('id').replace('"','&quot;')+"\" value=\""+$(this).attr('id').replace('"','&quot;')+"\" "+s+" "+dis+" /> "+$(this).text().trim()+"</label>");
//			});
//			data.push(dodiv('radio', t.find('Property[name=label]').text(), opts.join(' '), t));

			da = $.map(t.find("Property[name=disabled]").text().split(','), $.trim);
			var optid, opti = 0, optarr1 = [], optarr2 = {}, optarr3 = {};
			t.find("Property[name=options]>option").each(function(){
				optid = $(this).attr('id').trim();
				selx = (sel == $(this).attr('id')) ? "checked='checked'" : "";
				dis = ($.inArray(optid, da) >= 0) ? "disabled='disabled'" : "";
				s = $(this).text().trim();
				if (s !== '') {
					optarr1.push(optid);
					optarr2[optid] = $(this).text().trim();
					optarr3[optid] = selx + ' ' + dis;
					opti++;
				}
			});
			if (sorting) optarr1.sort();
			$j.each(optarr1, function(i){
				opts.push("<label><input type='radio' name=\""+t.attr('id').replace('"','&quot;')+"\" value=\""+optarr1[i].replace('"','&quot;')+"\" "+optarr3[optarr1[i]]+" /> "+optarr2[optarr1[i]]+"</label>");
			});
			data.push(dodiv('radio', t.find('Property[name=label]').text(), opts.join(' '), t));
		}
		else if (t0.tagName == 'CheckBox') {
			var dis = parseInt(t.attr('disabled') || '0', 10);
			dis = (dis == 1) ? "disabled='disabled'" : "";
			opts = [], sa = $.map(t.find("Property[name=selected]").text().split(','), $.trim);
			t.find("Property[name=options]>option").each(function(){
				s = ($.inArray($(this).attr('id').trim(), sa) >= 0) ? "checked='checked'" : "";
				opts.push("<label><input type='checkbox' name=\""+t.attr('id').replace('"','&quot;')+"["+$(this).attr('id')+"]\" "+s+" "+dis+" />&nbsp;"+$(this).text().trim()+"</label>");
			});
			data.push(dodiv('checkbox', t.find('Property[name=label]').text(), opts.join('<br />'), t));
		}
		else if (t0.tagName == 'Upload') {
			var dis = parseInt(t.attr('disabled') || '0', 10);
			dis = (dis == 1) ? "disabled='disabled'" : "";
			data.push(dodiv('upload', t.find('Property[name=label]').text(), "<input type='file' name=\""+t.attr('id').replace('"','&quot;')+"\" "+dis+" />", t));
		}
		else if (t0.tagName == 'TextArea') {
			var
				dis = parseInt(t.attr('disabled') || '0', 10),
				w = parseInt(t.find("Property[name=width]").text() || '0', 10),
				h = parseInt(t.find("Property[name=height]").text() || '0', 10),
				sty = "";
			if (w > 0 || h > 0) {
				sty = "style='"+(w>0?"width:"+w+"px;":"")+(h>0?"height:"+h+"px":"")+"'";
			}
			dis = (dis == 1) ? "disabled='disabled'" : "";
			data.push(dodiv('textarea', t.find('Property[name=label]').text(), "<textarea name=\""+t.attr('id').replace('"','&quot;')+"\" "+dis+" "+sty+">"+t.find('Property[name=defaultValue]').text()+"</textarea>", t));
		}
		else if (t0.tagName == 'Hypertext') {
			data.push(dodiv('hypertext', t.find('Property[name=label]').text(), t.find('Property[name=value]').text(), t));
		}
		else if (t0.tagName == 'Button') {
			var dis = parseInt(t.attr('disabled') || '0', 10);
			dis = (dis == 1) ? "disabled='disabled'" : "";
			nobtn = false;
			var vis = parseInt(t.attr('visible') || '0', 10);
			var align = t.find('Property[name=buttonAlign]').text().replace("'",'&acute;');
			var lbl = t.find('Property[name=label]').text().replace("'",'&acute;');
			var img = $j.trim(t.find('Property[name=buttonImage]').text().replace("'",'&acute;'));
			var btn = (img == '') ? "<input type='submit' value='"+lbl+"' />" : "<input type='image' alt='"+lbl+"' title='"+lbl+"' src='"+img+"' "+dis+" />";
			if (vis !== 1) vis = 'style="display:none"'; else vis = '';
			data.push( "<div class='row' "+vis+"><div class='submit' style='text-align:"+align+"'>"+btn+"</div></div>" );
		}
	});
	w.data('ev','');
	//w.html("<form action='' method='post' enctype='multipart/form-data' class='xml-dialog-form'>"+data.join(' ')+"<div class='submit'><input type='submit' /></div></form>").dialog('close').dialog('open');
	if (nobtn) { /* if no btn, add default submit */
		data.push( "<div class='submit'><input type='submit' /></div>" );
	}
	w.html("<form action='' method='post' enctype='multipart/form-data' class='xml-dialog-form'>"+data.join(' ')+"</form>").dialog('close').dialog('open');
	w.dialog('option', 'title', x.find("VDOMFormContainer>Properties>Property[name=label]").text() );
	w.data('ev','1');

}

</script>]]></Library>
  </Libraries>
  <E2vdom>
    <Events>
      <Userinterfaceevents>
        <Event Name="hide" Help="#Lang(505)">
          <Parameters/>
        </Event>
        <Event Name="show" Help="#Lang(506)">
          <Parameters/>
        </Event>
        <Event Name="submit" Help="#Lang(507)">
          <Parameters>
            <Parameter Name="params" Order="" VbType="" Help="#Lang(901)"/>
          </Parameters>
        </Event>
      </Userinterfaceevents>
    </Events>
    <Actions>
      <Container ID="2330fe83-8cd6-4ed5-907d-11874e7ebcf4">
        <Action Help="#Lang(501)" InterfaceName="#Lang(601)" MethodName="hide">
          <Parameters>
            <Parameter DefaultValue="0" Interface="" InterfaceName="#Lang(701)" ScriptName="fade" Help="#Lang(801)" RegularExpressionValidation=".*"/>
          </Parameters>
          <SourceCode><![CDATA[
$q("#"+this.domCont.id).dialog('close');
]]></SourceCode>
        </Action>
        <Action Help="#Lang(502)" InterfaceName="#Lang(602)" MethodName="show">
          <Parameters>
            <Parameter DefaultValue="0" Interface="" InterfaceName="#Lang(702)" ScriptName="fade" Help="#Lang(802)" RegularExpressionValidation=".*"/>
          </Parameters>
          <SourceCode><![CDATA[
$q("#"+this.domCont.id).dialog('open');
]]></SourceCode>
        </Action>
        <Action Help="#Lang(503)" InterfaceName="#Lang(603)" MethodName="resizeTo">
          <Parameters>
            <Parameter DefaultValue="0" Interface="" InterfaceName="#Lang(703)" ScriptName="width" Help="#Lang(803)" RegularExpressionValidation=".*"/>
            <Parameter DefaultValue="0" Interface="" InterfaceName="#Lang(704)" ScriptName="height" Help="#Lang(804)" RegularExpressionValidation=".*"/>
          </Parameters>
          <SourceCode><![CDATA[
$q("#"+this.domCont.id).dialog("option",{width:parseInt(width,10),height:parseInt(height,10)});
]]></SourceCode>
        </Action>
        <Action Help="#Lang(504)" InterfaceName="#Lang(604)" MethodName="loadData">
          <Parameters>
            <Parameter DefaultValue="0" Interface="" InterfaceName="#Lang(705)" ScriptName="xmldata" Help="#Lang(805)" RegularExpressionValidation=".*"/>
          </Parameters>
          <SourceCode><![CDATA[
vdom_xd_load("#"+this.domCont.id,xmldata);
]]></SourceCode>
        </Action>
      </Container>
    </Actions>
  </E2vdom>
</Type>